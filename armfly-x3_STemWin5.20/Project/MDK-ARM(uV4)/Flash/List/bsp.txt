; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=..\output\bsp.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=870 -I..\..\User -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\User\fonts -I..\..\emWin\GUI_X -I..\..\emWin\Config -I..\..\emWin\Include -I..\..\emWin\emWinTask -I..\..\User\fatfs\src -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM4F -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F4xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F4XX -DARM_MATH_CM4 -D__CC_ARM ..\..\User\bsp_stm32f4xx\bsp.c]
                          THUMB

                          AREA ||i.NVIC_Configuration||, CODE, READONLY, ALIGN=1

                  NVIC_Configuration PROC
;;;107    */
;;;108    void NVIC_Configuration(void)
000000  b510              PUSH     {r4,lr}
;;;109    {			
;;;110    	/* 设置NVIC优先级分组为Group2：0-3抢占式优先级，0-3的响应式优先级 */
;;;111    	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
000002  f44f60a0          MOV      r0,#0x500
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;112    }
00000a  bd10              POP      {r4,pc}
;;;113    /***************************** 安富莱电子 www.armfly.com (END OF FILE) *********************************/
                          ENDP


                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=1

                  bsp_Init PROC
;;;29     */
;;;30     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;31     {
;;;32     	/*
;;;33     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;34     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;35     
;;;36     		系统时钟缺省配置为168MHz，如果需要更改，可以修改 system_stm32f4xx.c 文件
;;;37     	*/
;;;38         TIM6_MeasureConfig();
000002  f7fffffe          BL       TIM6_MeasureConfig
;;;39     	
;;;40     	bsp_InitUart(); 	/* 初始化串口 */
000006  f7fffffe          BL       bsp_InitUart
;;;41     	bsp_InitKey();		/* 初始化按键变量（必须在 bsp_InitTimer() 之前调用） */
00000a  f7fffffe          BL       bsp_InitKey
;;;42      	
;;;43     
;;;44     	/* 针对不同的应用程序，添加需要的底层驱动模块初始化函数 */
;;;45     
;;;46     	bsp_InitLed(); 		/* 初始LED指示灯端口 */
00000e  f7fffffe          BL       bsp_InitLed
;;;47     	
;;;48     	LCD_InitHard();	      /* 初始化显示器硬件(配置GPIO和FSMC,给LCD发送初始化指令) */
000012  f7fffffe          BL       LCD_InitHard
;;;49     	TOUCH_InitHard();
000016  f7fffffe          BL       TOUCH_InitHard
;;;50     	
;;;51     	bsp_InitTimer();	/* 初始化系统滴答定时器 */
00001a  f7fffffe          BL       bsp_InitTimer
;;;52     	
;;;53     	/* Enable CRC clock */
;;;54         RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_CRC, ENABLE);
00001e  2101              MOVS     r1,#1
000020  0308              LSLS     r0,r1,#12
000022  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;55     }
000026  bd10              POP      {r4,pc}
;;;56     
                          ENDP


                          AREA ||i.bsp_RunPer10ms||, CODE, READONLY, ALIGN=2

                  bsp_RunPer10ms PROC
;;;65     extern __IO uint8_t s_ucRA8875BusyNow;
;;;66     void bsp_RunPer10ms(void)
000000  b510              PUSH     {r4,lr}
;;;67     {
;;;68         
;;;69     	/* RA8875 触摸*/
;;;70     	if (g_ChipID == IC_8875)
000002  4806              LDR      r0,|L3.28|
000004  8800              LDRH     r0,[r0,#0]  ; g_ChipID
000006  2875              CMP      r0,#0x75
000008  d105              BNE      |L3.22|
;;;71     	{
;;;72     	    /* 资源共享标志 */
;;;73     		if(s_ucRA8875BusyNow == 0)
00000a  4805              LDR      r0,|L3.32|
00000c  7800              LDRB     r0,[r0,#0]  ; s_ucRA8875BusyNow
00000e  b920              CBNZ     r0,|L3.26|
;;;74     		{
;;;75     			GUI_TOUCH_Exec();	
000010  f7fffffe          BL       GUI_TOUCH_Exec
000014  e001              B        |L3.26|
                  |L3.22|
;;;76     		}
;;;77     	}
;;;78     	/* XPT2046 */
;;;79     	else
;;;80     	{
;;;81     		GUI_TOUCH_Exec();	
000016  f7fffffe          BL       GUI_TOUCH_Exec
                  |L3.26|
;;;82     	}
;;;83     	
;;;84     }
00001a  bd10              POP      {r4,pc}
;;;85     
                          ENDP

                  |L3.28|
                          DCD      g_ChipID
                  |L3.32|
                          DCD      s_ucRA8875BusyNow

                          AREA ||i.bsp_RunPer1ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer1ms PROC
;;;93     */
;;;94     void bsp_RunPer1ms(void)
000000  4770              BX       lr
;;;95     {
;;;96     	;
;;;97     }
;;;98     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\bsp.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REV16|
#line 129 "D:\\Keil_v4\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_bsp_Init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REVSH|
#line 144
|__asm___5_bsp_c_bsp_Init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
