; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\bsp_fsmc_sram.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=..\output\bsp_fsmc_sram.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=870 -I..\..\User -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\User\fonts -I..\..\emWin\GUI_X -I..\..\emWin\Config -I..\..\emWin\Include -I..\..\emWin\emWinTask -I..\..\User\fatfs\src -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM4F -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F4xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F4XX -DARM_MATH_CM4 -D__CC_ARM ..\..\User\bsp_stm32f4xx\src\bsp_fsmc_sram.c]
                          THUMB

                          AREA ||i.bsp_InitExtSRAM||, CODE, READONLY, ALIGN=2

                  bsp_InitExtSRAM PROC
;;;27     */
;;;28     void bsp_InitExtSRAM(void)
000000  b500              PUSH     {lr}
;;;29     {
000002  b099              SUB      sp,sp,#0x64
;;;30     	FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
;;;31     	FSMC_NORSRAMTimingInitTypeDef  p;
;;;32     	GPIO_InitTypeDef GPIO_InitStructure;
;;;33     
;;;34     	/* 使能GPIO时钟 */
;;;35     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD | RCC_AHB1Periph_GPIOE | RCC_AHB1Periph_GPIOF |
000004  2101              MOVS     r1,#1
000006  2078              MOVS     r0,#0x78
000008  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;36     	             RCC_AHB1Periph_GPIOG, ENABLE);
;;;37     
;;;38     	/* 使能 FSMC 时钟 */
;;;39     	RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  4608              MOV      r0,r1
000010  f7fffffe          BL       RCC_AHB3PeriphClockCmd
;;;40     
;;;41     	/* SRAM 的 GPIO ：
;;;42     		PD0/FSMC_D2
;;;43     		PD1/FSMC_D3
;;;44     		PD4/FSMC_NOE
;;;45     		PD5/FSMC_NWE
;;;46     		PD8/FSMC_D13
;;;47     		PD9/FSMC_D14
;;;48     		PD10/FSMC_D15
;;;49     		PD11/FSMC_A16
;;;50     		PD12/FSMC_A17
;;;51     		PD13/FSMC_A18
;;;52     		PD14/FSMC_D0
;;;53     		PD15/FSMC_D1
;;;54     
;;;55     		PE0/FSMC_NBL0
;;;56     		PE1/FSMC_NBL1
;;;57     		PE3/FSMC_A19
;;;58     		PE4/FSMC_A20	-- 参与片选的译码
;;;59     		PE5/FSMC_A21	-- 参与片选的译码
;;;60     		PE7/FSMC_D4
;;;61     		PE8/FSMC_D5
;;;62     		PE9/FSMC_D6
;;;63     		PE10/FSMC_D7
;;;64     		PE11/FSMC_D8
;;;65     		PE12/FSMC_D9
;;;66     		PE13/FSMC_D10
;;;67     		PE14/FSMC_D11
;;;68     		PE15/FSMC_D12
;;;69     
;;;70     		PF0/FSMC_A0
;;;71     		PF1/FSMC_A1
;;;72     		PF2/FSMC_A2
;;;73     		PF3/FSMC_A3
;;;74     		PF4/FSMC_A4
;;;75     		PF5/FSMC_A5
;;;76     		PF12/FSMC_A6
;;;77     		PF13/FSMC_A7
;;;78     		PF14/FSMC_A8
;;;79     		PF15/FSMC_A9
;;;80     
;;;81     		PG0/FSMC_A10
;;;82     		PG1/FSMC_A11
;;;83     		PG2/FSMC_A12
;;;84     		PG3/FSMC_A13
;;;85     		PG4/FSMC_A14
;;;86     		PG5/FSMC_A15
;;;87     		PG10/FSMC_NE3	--- 片选主信号
;;;88     	*/
;;;89     
;;;90     	/* GPIOD configuration */
;;;91     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource0, GPIO_AF_FSMC);
000014  220c              MOVS     r2,#0xc
000016  2100              MOVS     r1,#0
000018  4893              LDR      r0,|L1.616|
00001a  f7fffffe          BL       GPIO_PinAFConfig
;;;92     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource1, GPIO_AF_FSMC);
00001e  220c              MOVS     r2,#0xc
000020  2101              MOVS     r1,#1
000022  4891              LDR      r0,|L1.616|
000024  f7fffffe          BL       GPIO_PinAFConfig
;;;93     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource4, GPIO_AF_FSMC);
000028  220c              MOVS     r2,#0xc
00002a  2104              MOVS     r1,#4
00002c  488e              LDR      r0,|L1.616|
00002e  f7fffffe          BL       GPIO_PinAFConfig
;;;94     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource5, GPIO_AF_FSMC);
000032  220c              MOVS     r2,#0xc
000034  2105              MOVS     r1,#5
000036  488c              LDR      r0,|L1.616|
000038  f7fffffe          BL       GPIO_PinAFConfig
;;;95     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource8, GPIO_AF_FSMC);
00003c  220c              MOVS     r2,#0xc
00003e  2108              MOVS     r1,#8
000040  4889              LDR      r0,|L1.616|
000042  f7fffffe          BL       GPIO_PinAFConfig
;;;96     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource9, GPIO_AF_FSMC);
000046  220c              MOVS     r2,#0xc
000048  2109              MOVS     r1,#9
00004a  4887              LDR      r0,|L1.616|
00004c  f7fffffe          BL       GPIO_PinAFConfig
;;;97     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource10, GPIO_AF_FSMC);
000050  220c              MOVS     r2,#0xc
000052  210a              MOVS     r1,#0xa
000054  4884              LDR      r0,|L1.616|
000056  f7fffffe          BL       GPIO_PinAFConfig
;;;98     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource11, GPIO_AF_FSMC);
00005a  220c              MOVS     r2,#0xc
00005c  210b              MOVS     r1,#0xb
00005e  4882              LDR      r0,|L1.616|
000060  f7fffffe          BL       GPIO_PinAFConfig
;;;99     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource12, GPIO_AF_FSMC);
000064  220c              MOVS     r2,#0xc
000066  4611              MOV      r1,r2
000068  487f              LDR      r0,|L1.616|
00006a  f7fffffe          BL       GPIO_PinAFConfig
;;;100    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource13, GPIO_AF_FSMC);
00006e  220c              MOVS     r2,#0xc
000070  210d              MOVS     r1,#0xd
000072  487d              LDR      r0,|L1.616|
000074  f7fffffe          BL       GPIO_PinAFConfig
;;;101    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource14, GPIO_AF_FSMC);
000078  220c              MOVS     r2,#0xc
00007a  210e              MOVS     r1,#0xe
00007c  487a              LDR      r0,|L1.616|
00007e  f7fffffe          BL       GPIO_PinAFConfig
;;;102    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource15, GPIO_AF_FSMC);
000082  220c              MOVS     r2,#0xc
000084  210f              MOVS     r1,#0xf
000086  4878              LDR      r0,|L1.616|
000088  f7fffffe          BL       GPIO_PinAFConfig
;;;103    
;;;104    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0  | GPIO_Pin_1  | GPIO_Pin_4  | GPIO_Pin_5  |
00008c  f64f7033          MOV      r0,#0xff33
000090  9001              STR      r0,[sp,#4]
;;;105    	                    GPIO_Pin_8  | GPIO_Pin_9  | GPIO_Pin_10 | GPIO_Pin_11 |
;;;106    	                    GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;
;;;107    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000092  2002              MOVS     r0,#2
000094  f88d0008          STRB     r0,[sp,#8]
;;;108    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
000098  2003              MOVS     r0,#3
00009a  f88d0009          STRB     r0,[sp,#9]
;;;109    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
00009e  2000              MOVS     r0,#0
0000a0  f88d000a          STRB     r0,[sp,#0xa]
;;;110    	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
0000a4  f88d000b          STRB     r0,[sp,#0xb]
;;;111    
;;;112    	GPIO_Init(GPIOD, &GPIO_InitStructure);
0000a8  a901              ADD      r1,sp,#4
0000aa  486f              LDR      r0,|L1.616|
0000ac  f7fffffe          BL       GPIO_Init
;;;113    
;;;114    
;;;115    	/* GPIOE configuration */
;;;116    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource0 , GPIO_AF_FSMC);
0000b0  220c              MOVS     r2,#0xc
0000b2  2100              MOVS     r1,#0
0000b4  486d              LDR      r0,|L1.620|
0000b6  f7fffffe          BL       GPIO_PinAFConfig
;;;117    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource1 , GPIO_AF_FSMC);
0000ba  220c              MOVS     r2,#0xc
0000bc  2101              MOVS     r1,#1
0000be  486b              LDR      r0,|L1.620|
0000c0  f7fffffe          BL       GPIO_PinAFConfig
;;;118    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource3 , GPIO_AF_FSMC);
0000c4  220c              MOVS     r2,#0xc
0000c6  2103              MOVS     r1,#3
0000c8  4868              LDR      r0,|L1.620|
0000ca  f7fffffe          BL       GPIO_PinAFConfig
;;;119    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource4 , GPIO_AF_FSMC);
0000ce  220c              MOVS     r2,#0xc
0000d0  2104              MOVS     r1,#4
0000d2  4866              LDR      r0,|L1.620|
0000d4  f7fffffe          BL       GPIO_PinAFConfig
;;;120    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource5 , GPIO_AF_FSMC);
0000d8  220c              MOVS     r2,#0xc
0000da  2105              MOVS     r1,#5
0000dc  4863              LDR      r0,|L1.620|
0000de  f7fffffe          BL       GPIO_PinAFConfig
;;;121    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource7 , GPIO_AF_FSMC);
0000e2  220c              MOVS     r2,#0xc
0000e4  2107              MOVS     r1,#7
0000e6  4861              LDR      r0,|L1.620|
0000e8  f7fffffe          BL       GPIO_PinAFConfig
;;;122    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource8 , GPIO_AF_FSMC);
0000ec  220c              MOVS     r2,#0xc
0000ee  2108              MOVS     r1,#8
0000f0  485e              LDR      r0,|L1.620|
0000f2  f7fffffe          BL       GPIO_PinAFConfig
;;;123    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource9 , GPIO_AF_FSMC);
0000f6  220c              MOVS     r2,#0xc
0000f8  2109              MOVS     r1,#9
0000fa  485c              LDR      r0,|L1.620|
0000fc  f7fffffe          BL       GPIO_PinAFConfig
;;;124    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource10 , GPIO_AF_FSMC);
000100  220c              MOVS     r2,#0xc
000102  210a              MOVS     r1,#0xa
000104  4859              LDR      r0,|L1.620|
000106  f7fffffe          BL       GPIO_PinAFConfig
;;;125    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource11 , GPIO_AF_FSMC);
00010a  220c              MOVS     r2,#0xc
00010c  210b              MOVS     r1,#0xb
00010e  4857              LDR      r0,|L1.620|
000110  f7fffffe          BL       GPIO_PinAFConfig
;;;126    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource12 , GPIO_AF_FSMC);
000114  220c              MOVS     r2,#0xc
000116  4611              MOV      r1,r2
000118  4854              LDR      r0,|L1.620|
00011a  f7fffffe          BL       GPIO_PinAFConfig
;;;127    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource13 , GPIO_AF_FSMC);
00011e  220c              MOVS     r2,#0xc
000120  210d              MOVS     r1,#0xd
000122  4852              LDR      r0,|L1.620|
000124  f7fffffe          BL       GPIO_PinAFConfig
;;;128    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource14 , GPIO_AF_FSMC);
000128  220c              MOVS     r2,#0xc
00012a  210e              MOVS     r1,#0xe
00012c  484f              LDR      r0,|L1.620|
00012e  f7fffffe          BL       GPIO_PinAFConfig
;;;129    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource15 , GPIO_AF_FSMC);
000132  220c              MOVS     r2,#0xc
000134  210f              MOVS     r1,#0xf
000136  484d              LDR      r0,|L1.620|
000138  f7fffffe          BL       GPIO_PinAFConfig
;;;130    
;;;131    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0  | GPIO_Pin_1  | GPIO_Pin_3 |
00013c  f64f70bb          MOV      r0,#0xffbb
000140  9001              STR      r0,[sp,#4]
;;;132    	                    GPIO_Pin_4  | GPIO_Pin_5  | GPIO_Pin_7 |
;;;133    	                    GPIO_Pin_8  | GPIO_Pin_9  | GPIO_Pin_10 | GPIO_Pin_11|
;;;134    	                    GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;
;;;135    
;;;136    	GPIO_Init(GPIOE, &GPIO_InitStructure);
000142  a901              ADD      r1,sp,#4
000144  4849              LDR      r0,|L1.620|
000146  f7fffffe          BL       GPIO_Init
;;;137    
;;;138    
;;;139    	/* GPIOF configuration */
;;;140    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource0 , GPIO_AF_FSMC);
00014a  220c              MOVS     r2,#0xc
00014c  2100              MOVS     r1,#0
00014e  4848              LDR      r0,|L1.624|
000150  f7fffffe          BL       GPIO_PinAFConfig
;;;141    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource1 , GPIO_AF_FSMC);
000154  220c              MOVS     r2,#0xc
000156  2101              MOVS     r1,#1
000158  4845              LDR      r0,|L1.624|
00015a  f7fffffe          BL       GPIO_PinAFConfig
;;;142    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource2 , GPIO_AF_FSMC);
00015e  220c              MOVS     r2,#0xc
000160  2102              MOVS     r1,#2
000162  4843              LDR      r0,|L1.624|
000164  f7fffffe          BL       GPIO_PinAFConfig
;;;143    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource3 , GPIO_AF_FSMC);
000168  220c              MOVS     r2,#0xc
00016a  2103              MOVS     r1,#3
00016c  4840              LDR      r0,|L1.624|
00016e  f7fffffe          BL       GPIO_PinAFConfig
;;;144    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource4 , GPIO_AF_FSMC);
000172  220c              MOVS     r2,#0xc
000174  2104              MOVS     r1,#4
000176  483e              LDR      r0,|L1.624|
000178  f7fffffe          BL       GPIO_PinAFConfig
;;;145    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource5 , GPIO_AF_FSMC);
00017c  220c              MOVS     r2,#0xc
00017e  2105              MOVS     r1,#5
000180  483b              LDR      r0,|L1.624|
000182  f7fffffe          BL       GPIO_PinAFConfig
;;;146    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource12 , GPIO_AF_FSMC);
000186  220c              MOVS     r2,#0xc
000188  4611              MOV      r1,r2
00018a  4839              LDR      r0,|L1.624|
00018c  f7fffffe          BL       GPIO_PinAFConfig
;;;147    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource13 , GPIO_AF_FSMC);
000190  220c              MOVS     r2,#0xc
000192  210d              MOVS     r1,#0xd
000194  4836              LDR      r0,|L1.624|
000196  f7fffffe          BL       GPIO_PinAFConfig
;;;148    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource14 , GPIO_AF_FSMC);
00019a  220c              MOVS     r2,#0xc
00019c  210e              MOVS     r1,#0xe
00019e  4834              LDR      r0,|L1.624|
0001a0  f7fffffe          BL       GPIO_PinAFConfig
;;;149    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource15 , GPIO_AF_FSMC);
0001a4  220c              MOVS     r2,#0xc
0001a6  210f              MOVS     r1,#0xf
0001a8  4831              LDR      r0,|L1.624|
0001aa  f7fffffe          BL       GPIO_PinAFConfig
;;;150    
;;;151    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0  | GPIO_Pin_1  | GPIO_Pin_2  | GPIO_Pin_3  |
0001ae  f24f003f          MOV      r0,#0xf03f
0001b2  9001              STR      r0,[sp,#4]
;;;152    	                    GPIO_Pin_4  | GPIO_Pin_5  | GPIO_Pin_12 | GPIO_Pin_13 |
;;;153    	                    GPIO_Pin_14 | GPIO_Pin_15;
;;;154    
;;;155    	GPIO_Init(GPIOF, &GPIO_InitStructure);
0001b4  a901              ADD      r1,sp,#4
0001b6  482e              LDR      r0,|L1.624|
0001b8  f7fffffe          BL       GPIO_Init
;;;156    
;;;157    
;;;158    	/* GPIOG configuration */
;;;159    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource0 , GPIO_AF_FSMC);
0001bc  220c              MOVS     r2,#0xc
0001be  2100              MOVS     r1,#0
0001c0  482c              LDR      r0,|L1.628|
0001c2  f7fffffe          BL       GPIO_PinAFConfig
;;;160    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource1 , GPIO_AF_FSMC);
0001c6  220c              MOVS     r2,#0xc
0001c8  2101              MOVS     r1,#1
0001ca  482a              LDR      r0,|L1.628|
0001cc  f7fffffe          BL       GPIO_PinAFConfig
;;;161    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource2 , GPIO_AF_FSMC);
0001d0  220c              MOVS     r2,#0xc
0001d2  2102              MOVS     r1,#2
0001d4  4827              LDR      r0,|L1.628|
0001d6  f7fffffe          BL       GPIO_PinAFConfig
;;;162    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource3 , GPIO_AF_FSMC);
0001da  220c              MOVS     r2,#0xc
0001dc  2103              MOVS     r1,#3
0001de  4825              LDR      r0,|L1.628|
0001e0  f7fffffe          BL       GPIO_PinAFConfig
;;;163    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource4 , GPIO_AF_FSMC);
0001e4  220c              MOVS     r2,#0xc
0001e6  2104              MOVS     r1,#4
0001e8  4822              LDR      r0,|L1.628|
0001ea  f7fffffe          BL       GPIO_PinAFConfig
;;;164    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource5 , GPIO_AF_FSMC);
0001ee  220c              MOVS     r2,#0xc
0001f0  2105              MOVS     r1,#5
0001f2  4820              LDR      r0,|L1.628|
0001f4  f7fffffe          BL       GPIO_PinAFConfig
;;;165    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource10 , GPIO_AF_FSMC);
0001f8  220c              MOVS     r2,#0xc
0001fa  210a              MOVS     r1,#0xa
0001fc  481d              LDR      r0,|L1.628|
0001fe  f7fffffe          BL       GPIO_PinAFConfig
;;;166    
;;;167    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0  | GPIO_Pin_1  | GPIO_Pin_2  | GPIO_Pin_3 |
000202  f240403f          MOV      r0,#0x43f
000206  9001              STR      r0,[sp,#4]
;;;168    	                    GPIO_Pin_4  | GPIO_Pin_5  |GPIO_Pin_10;
;;;169    
;;;170    	GPIO_Init(GPIOG, &GPIO_InitStructure);
000208  a901              ADD      r1,sp,#4
00020a  481a              LDR      r0,|L1.628|
00020c  f7fffffe          BL       GPIO_Init
;;;171    
;;;172    	/*-- FSMC Configuration ------------------------------------------------------*/
;;;173    	p.FSMC_AddressSetupTime = 3;		/* 设置为2会出错; 3正常 */
000210  2003              MOVS     r0,#3
000212  9003              STR      r0,[sp,#0xc]
;;;174    	p.FSMC_AddressHoldTime = 0;
000214  2000              MOVS     r0,#0
000216  9004              STR      r0,[sp,#0x10]
;;;175    	p.FSMC_DataSetupTime = 2;			/* 设置为1出错，2正常 */
000218  2002              MOVS     r0,#2
00021a  9005              STR      r0,[sp,#0x14]
;;;176    	p.FSMC_BusTurnAroundDuration = 1;
00021c  2001              MOVS     r0,#1
00021e  9006              STR      r0,[sp,#0x18]
;;;177    	p.FSMC_CLKDivision = 0;
000220  2000              MOVS     r0,#0
000222  9007              STR      r0,[sp,#0x1c]
;;;178    	p.FSMC_DataLatency = 0;
000224  9008              STR      r0,[sp,#0x20]
;;;179    	p.FSMC_AccessMode = FSMC_AccessMode_A;
000226  9009              STR      r0,[sp,#0x24]
;;;180    
;;;181    	FSMC_NORSRAMInitStructure.FSMC_Bank = FSMC_Bank1_NORSRAM3;
000228  2004              MOVS     r0,#4
00022a  900a              STR      r0,[sp,#0x28]
;;;182    	FSMC_NORSRAMInitStructure.FSMC_DataAddressMux = FSMC_DataAddressMux_Disable;
00022c  2000              MOVS     r0,#0
00022e  900b              STR      r0,[sp,#0x2c]
;;;183    	FSMC_NORSRAMInitStructure.FSMC_MemoryType = FSMC_MemoryType_SRAM;	// FSMC_MemoryType_PSRAM;
000230  900c              STR      r0,[sp,#0x30]
;;;184    	FSMC_NORSRAMInitStructure.FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_16b;
000232  2010              MOVS     r0,#0x10
000234  900d              STR      r0,[sp,#0x34]
;;;185    	FSMC_NORSRAMInitStructure.FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
000236  2000              MOVS     r0,#0
000238  900e              STR      r0,[sp,#0x38]
;;;186    	FSMC_NORSRAMInitStructure.FSMC_AsynchronousWait = FSMC_AsynchronousWait_Disable;
00023a  900f              STR      r0,[sp,#0x3c]
;;;187    	FSMC_NORSRAMInitStructure.FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
00023c  9010              STR      r0,[sp,#0x40]
;;;188    	FSMC_NORSRAMInitStructure.FSMC_WrapMode = FSMC_WrapMode_Disable;
00023e  9011              STR      r0,[sp,#0x44]
;;;189    	FSMC_NORSRAMInitStructure.FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
000240  9012              STR      r0,[sp,#0x48]
;;;190    	FSMC_NORSRAMInitStructure.FSMC_WriteOperation = FSMC_WriteOperation_Enable;
000242  f44f5080          MOV      r0,#0x1000
000246  9013              STR      r0,[sp,#0x4c]
;;;191    	FSMC_NORSRAMInitStructure.FSMC_WaitSignal = FSMC_WaitSignal_Disable;
000248  2000              MOVS     r0,#0
00024a  9014              STR      r0,[sp,#0x50]
;;;192    	FSMC_NORSRAMInitStructure.FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
00024c  9015              STR      r0,[sp,#0x54]
;;;193    	FSMC_NORSRAMInitStructure.FSMC_WriteBurst = FSMC_WriteBurst_Disable;
00024e  9016              STR      r0,[sp,#0x58]
;;;194    	FSMC_NORSRAMInitStructure.FSMC_ReadWriteTimingStruct = &p;
000250  a803              ADD      r0,sp,#0xc
000252  9017              STR      r0,[sp,#0x5c]
;;;195    	FSMC_NORSRAMInitStructure.FSMC_WriteTimingStruct = &p;
000254  9018              STR      r0,[sp,#0x60]
;;;196    
;;;197    	FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure);
000256  a80a              ADD      r0,sp,#0x28
000258  f7fffffe          BL       FSMC_NORSRAMInit
;;;198    
;;;199    	/*!< Enable FSMC Bank1_SRAM3 Bank */
;;;200    	FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM3, ENABLE);
00025c  2101              MOVS     r1,#1
00025e  2004              MOVS     r0,#4
000260  f7fffffe          BL       FSMC_NORSRAMCmd
;;;201    }
000264  b019              ADD      sp,sp,#0x64
000266  bd00              POP      {pc}
;;;202    
                          ENDP

                  |L1.616|
                          DCD      0x40020c00
                  |L1.620|
                          DCD      0x40021000
                  |L1.624|
                          DCD      0x40021400
                  |L1.628|
                          DCD      0x40021800

                          AREA ||i.bsp_TestExtSRAM||, CODE, READONLY, ALIGN=2

                  bsp_TestExtSRAM PROC
;;;210    */
;;;211    uint8_t bsp_TestExtSRAM(void)
000000  b538              PUSH     {r3-r5,lr}
;;;212    {
;;;213    	uint32_t i;
;;;214    	uint32_t *pSRAM;
;;;215    	uint8_t *pBytes;
;;;216    	uint32_t err;
;;;217    	const uint8_t ByteBuf[4] = {0x55, 0xA5, 0x5A, 0xAA};
000002  a02d              ADR      r0,|L2.184|
000004  6800              LDR      r0,[r0,#0]
000006  9000              STR      r0,[sp,#0]
;;;218    
;;;219    	/* 写SRAM */
;;;220    	pSRAM = (uint32_t *)EXT_SRAM_ADDR;
000008  f04f43d0          MOV      r3,#0x68000000
;;;221    	for (i = 0; i < EXT_SRAM_SIZE / 4; i++)
00000c  2100              MOVS     r1,#0
00000e  e001              B        |L2.20|
                  |L2.16|
;;;222    	{
;;;223    		*pSRAM++ = i;
000010  c302              STM      r3!,{r1}
000012  1c49              ADDS     r1,r1,#1              ;221
                  |L2.20|
000014  f5b12f00          CMP      r1,#0x80000           ;221
000018  d3fa              BCC      |L2.16|
;;;224    	}
;;;225    
;;;226    	/* 读SRAM */
;;;227    	err = 0;
00001a  2200              MOVS     r2,#0
;;;228    	pSRAM = (uint32_t *)EXT_SRAM_ADDR;
00001c  f04f43d0          MOV      r3,#0x68000000
;;;229    	for (i = 0; i < EXT_SRAM_SIZE / 4; i++)
000020  2100              MOVS     r1,#0
000022  e004              B        |L2.46|
                  |L2.36|
;;;230    	{
;;;231    		if (*pSRAM++ != i)
000024  cb20              LDM      r3!,{r5}
000026  428d              CMP      r5,r1
000028  d000              BEQ      |L2.44|
;;;232    		{
;;;233    			err++;
00002a  1c52              ADDS     r2,r2,#1
                  |L2.44|
00002c  1c49              ADDS     r1,r1,#1              ;229
                  |L2.46|
00002e  f5b12f00          CMP      r1,#0x80000           ;229
000032  d3f7              BCC      |L2.36|
;;;234    		}
;;;235    	}
;;;236    
;;;237    	if (err >  0)
000034  b112              CBZ      r2,|L2.60|
;;;238    	{
;;;239    		return  (4 * err);
000036  0690              LSLS     r0,r2,#26
000038  0e00              LSRS     r0,r0,#24
                  |L2.58|
;;;240    	}
;;;241    
;;;242    	/* 对SRAM 的数据求反并写入 */
;;;243    	pSRAM = (uint32_t *)EXT_SRAM_ADDR;
;;;244    	for (i = 0; i < EXT_SRAM_SIZE / 4; i++)
;;;245    	{
;;;246    		*pSRAM = ~*pSRAM;
;;;247    		pSRAM++;
;;;248    	}
;;;249    
;;;250    	/* 再次比较SRAM的数据 */
;;;251    	err = 0;
;;;252    	pSRAM = (uint32_t *)EXT_SRAM_ADDR;
;;;253    	for (i = 0; i < EXT_SRAM_SIZE / 4; i++)
;;;254    	{
;;;255    		if (*pSRAM++ != (~i))
;;;256    		{
;;;257    			err++;
;;;258    		}
;;;259    	}
;;;260    
;;;261    	if (err >  0)
;;;262    	{
;;;263    		return (4 * err);
;;;264    	}
;;;265    
;;;266    	/* 测试按字节方式访问, 目的是验证 FSMC_NBL0 、 FSMC_NBL1 口线 */
;;;267    	pBytes = (uint8_t *)EXT_SRAM_ADDR;
;;;268    	for (i = 0; i < sizeof(ByteBuf); i++)
;;;269    	{
;;;270    		*pBytes++ = ByteBuf[i];
;;;271    	}
;;;272    
;;;273    	/* 比较SRAM的数据 */
;;;274    	err = 0;
;;;275    	pBytes = (uint8_t *)EXT_SRAM_ADDR;
;;;276    	for (i = 0; i < sizeof(ByteBuf); i++)
;;;277    	{
;;;278    		if (*pBytes++ != ByteBuf[i])
;;;279    		{
;;;280    			err++;
;;;281    		}
;;;282    	}
;;;283    	if (err >  0)
;;;284    	{
;;;285    		return err;
;;;286    	}
;;;287    	return 0;
;;;288    }
00003a  bd38              POP      {r3-r5,pc}
                  |L2.60|
00003c  f04f43d0          MOV      r3,#0x68000000        ;243
000040  2100              MOVS     r1,#0                 ;244
000042  e004              B        |L2.78|
                  |L2.68|
000044  6818              LDR      r0,[r3,#0]            ;246
000046  43c0              MVNS     r0,r0                 ;246
000048  6018              STR      r0,[r3,#0]            ;246
00004a  1d1b              ADDS     r3,r3,#4              ;247
00004c  1c49              ADDS     r1,r1,#1              ;244
                  |L2.78|
00004e  f5b12f00          CMP      r1,#0x80000           ;244
000052  d3f7              BCC      |L2.68|
000054  2200              MOVS     r2,#0                 ;251
000056  f04f43d0          MOV      r3,#0x68000000        ;252
00005a  2100              MOVS     r1,#0                 ;253
00005c  e005              B        |L2.106|
                  |L2.94|
00005e  cb20              LDM      r3!,{r5}              ;255
000060  43c8              MVNS     r0,r1                 ;255
000062  4285              CMP      r5,r0                 ;255
000064  d000              BEQ      |L2.104|
000066  1c52              ADDS     r2,r2,#1              ;257
                  |L2.104|
000068  1c49              ADDS     r1,r1,#1              ;253
                  |L2.106|
00006a  f5b12f00          CMP      r1,#0x80000           ;253
00006e  d3f6              BCC      |L2.94|
000070  b112              CBZ      r2,|L2.120|
000072  0690              LSLS     r0,r2,#26             ;263
000074  0e00              LSRS     r0,r0,#24             ;263
000076  e7e0              B        |L2.58|
                  |L2.120|
000078  f04f44d0          MOV      r4,#0x68000000        ;267
00007c  2100              MOVS     r1,#0                 ;268
00007e  e004              B        |L2.138|
                  |L2.128|
000080  f81d0001          LDRB     r0,[sp,r1]            ;270
000084  f8040b01          STRB     r0,[r4],#1            ;270
000088  1c49              ADDS     r1,r1,#1              ;268
                  |L2.138|
00008a  2904              CMP      r1,#4                 ;268
00008c  d3f8              BCC      |L2.128|
00008e  2200              MOVS     r2,#0                 ;274
000090  f04f44d0          MOV      r4,#0x68000000        ;275
000094  2100              MOVS     r1,#0                 ;276
000096  e007              B        |L2.168|
                  |L2.152|
000098  f8145b01          LDRB     r5,[r4],#1            ;278
00009c  f81d0001          LDRB     r0,[sp,r1]            ;278
0000a0  4285              CMP      r5,r0                 ;278
0000a2  d000              BEQ      |L2.166|
0000a4  1c52              ADDS     r2,r2,#1              ;280
                  |L2.166|
0000a6  1c49              ADDS     r1,r1,#1              ;276
                  |L2.168|
0000a8  2904              CMP      r1,#4                 ;276
0000aa  d3f5              BCC      |L2.152|
0000ac  b10a              CBZ      r2,|L2.178|
0000ae  b2d0              UXTB     r0,r2                 ;285
0000b0  e7c3              B        |L2.58|
                  |L2.178|
0000b2  2000              MOVS     r0,#0                 ;287
0000b4  e7c1              B        |L2.58|
;;;289    
                          ENDP

0000b6  0000              DCW      0x0000
                  |L2.184|
0000b8  55a55aaa          DCB      "U",165,"Z",170

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_fsmc_sram.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_bsp_fsmc_sram_c_4f10e948____REV16|
#line 129 "D:\\Keil_v4\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_bsp_fsmc_sram_c_4f10e948____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_bsp_fsmc_sram_c_4f10e948____REVSH|
#line 144
|__asm___15_bsp_fsmc_sram_c_4f10e948____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
